// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id
  email      String   @unique
  fullname   String
  password   String
  role       Role     @default(STUDENT)
  department String
  createdAt  DateTime @default(now())

  Courses Courses[]

  Profile    Profile?
}

model Profile {
  id                   String              @id
  profile              User                @relation(fields: [id], references: [id], onDelete: Cascade)
  educationRecords     EducationRecord[]
  scholarshipRecords   ScholarshipRecord[]
  UserDocument         UserDocument?
  studentId            String
  title                String?
  firstname            String?
  lastname             String?
  dateOfBirth          DateTime?           @db.Date
  age                  Int?
  nationality          String?
  religion             String?
  address              String              @db.MediumText
  phoneNumber          String?
  email                String?
  carrer               String?
  carrerPosition       String?
  carrerAddress        String?
  educationExpenseFrom String?
  income               Int?                @default(0)
}

model EducationRecord {
  id            Int     @id() @default(autoincrement())
  userId        String
  Profile       Profile @relation(fields: [userId], references: [id])
  degreeName    String
  gpa           Float
  graduatedYear Int
}

model ScholarshipRecord {
  id           Int     @id() @default(autoincrement())
  userId       String
  Profile      Profile @relation(fields: [userId], references: [id])
  name         String
  duration     Int
  typeOrAmount Int
}

model UserDocument {
  userId         String  @id
  userDocuemntId Profile @relation(fields: [userId], references: [id])
  picturePath    String
  transcriptPath String
  classTablePath String
  bookBankPath   String

}

model SystemStatus {
  id        Int      @id() @default(autoincrement())
  openDate  DateTime
  closeDate DateTime
}

enum Role {
  SUPERADMIN
  ADMIN
  PROFESSOR
  STUDENT
}

model Courses{
  courseId String @id
  courseNameEng  String 
  courseNameThai String
  credit String 
  courseDes String?
  professor User? @relation(fields: [professorId], references: [id])
  professorId  String?
}