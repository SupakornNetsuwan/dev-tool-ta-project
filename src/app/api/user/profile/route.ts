import { NextRequest, NextResponse } from "next/server"
import checkAuth from "@/core/func/checkAuth"
import getProfile from "./func/getProfile"
// Form upload handling
import fileUploadHandler from "@/core/func/fileUploadHandler"
import checkRemoveOldFiles from "./func/checkRemoveOldFiles"
import updateProfile from "./func/updateProfile"

export const GET = async (request: NextRequest) => {
    const { hasPermission, session } = await checkAuth(["ADMIN", "PROFESSOR", "STUDENT", "SUPERADMIN"])
    if (!session) return NextResponse.json({ message: "‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö" }, { status: 401 })
    if (!hasPermission) return NextResponse.json({ message: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ü•π" }, { status: 403 })

    try {
        const profile = await getProfile(session.user.id);
        return NextResponse.json({ message: "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", data: profile })
    } catch (error) {
        // ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
        let message = "‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"
        if (error instanceof Object && !(error instanceof Error)) message = JSON.stringify(error)
        if (error instanceof Error) message = error.message
        if (typeof error == "string") message = error
        return NextResponse.json({ message }, { status: 400 })
    }
}

export const PATCH = async (request: NextRequest) => {
    const { hasPermission, session } = await checkAuth(["ADMIN", "PROFESSOR", "STUDENT", "SUPERADMIN"])
    if (!session) return NextResponse.json({ message: "‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö" }, { status: 401 })
    if (!hasPermission) return NextResponse.json({ message: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ü•π" }, { status: 403 })

    try {
        const formData = await request.formData();
        const { firstname, lastname, title, address, phoneNumber } = (Object.fromEntries(formData)) as { [key: string]: string | null }
        const id = session.user.id; // ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà User ‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏à‡∏∂‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å session
        const email = session.user.email; // ‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà User ‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏à‡∏∂‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å session
        const [bookBankPath, classTablePath, transcriptPath, picturePath] = await Promise.all([
            fileUploadHandler(formData.get("UserDocument[bookBankPath]"), email, "‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"),
            fileUploadHandler(formData.get("UserDocument[classTablePath]"), email, "‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"),
            fileUploadHandler(formData.get("UserDocument[transcriptPath]"), email, "‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ"),
            fileUploadHandler(formData.get("UserDocument[picturePath]"), email, "‡∏£‡∏π‡∏õ‡∏ñ‡πà‡∏≤‡∏¢")
        ])

        await checkRemoveOldFiles({ bookBankPath, classTablePath, picturePath, transcriptPath }, id)

        const updatedProfile = await updateProfile({
            title, firstname, lastname, address, phoneNumber, email, id, UserDocument: {
                classTablePath, transcriptPath, picturePath, bookBankPath
            }
        });

        return NextResponse.json({ message: "‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", data: updatedProfile })
    } catch (error) {
        // ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error ‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
        let message = "‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"
        if (error instanceof Object && !(error instanceof Error)) message = JSON.stringify(error)
        if (error instanceof Error) message = error.message
        if (typeof error == "string") message = error
        return NextResponse.json({ message }, { status: 400 })
    }
}