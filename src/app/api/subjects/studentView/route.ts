import checkAuth from "@/core/func/checkAuth";
import { NextRequest, NextResponse } from "next/server";
import getCoursesWithEnrollStatus from "./func/getCoursesWithEnrollStatus";
import getSystemStatus from "../../systemStatus/func/getSystemStatus";

/**
 * @description ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏´‡πá‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏î‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á (‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤)
 */


export const GET = async (request: NextRequest) => {
    const { hasPermission, session } = await checkAuth(["ADMIN", "STUDENT", "SUPERADMIN", "PROFESSOR"]);
    if (!session) return NextResponse.json({ message: "‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö" }, { status: 401 })
    if (!hasPermission) return NextResponse.json({ message: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ü•π" }, { status: 403 })
    const user = session.user
    console.log(`------- ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏£‡∏´‡∏±‡∏™ ${user.id} üéì-------`)

    try {
        const [courses, systemStatus] = await Promise.all([getCoursesWithEnrollStatus(user.id), getSystemStatus()])
        let response;

        if (systemStatus?.isOpen) {
            // ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà üü¢
            response = courses.filter(course => course.creationStatus === "ENROLLABLE")
        } else {
            // ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà üü°
            response = courses.filter(course => course.status === "enrolled" && course.creationStatus === "ENROLLABLE")
        }

        return NextResponse.json({ message: `‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${user.fullname} (${user.email}) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`, data: response })
    } catch (error) {
        console.log(error);
        let message = "‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"
        if (error instanceof Object && !(error instanceof Error)) message = JSON.stringify(error);
        if (error instanceof Error) message = error.message
        if (typeof error == "string") message = error
        return NextResponse.json({ message }, { status: 400 })
    }
}