
import checkAuth from "@/core/func/checkAuth";
import { NextRequest, NextResponse } from "next/server";
import { getEnrolls } from "./func/getEnrolls";
import { EnrollStatus } from "@prisma/client";
type ParamsType = {
    params: {
        subjectId: string
    }
}

export const GET = async (request: NextRequest) => {
    console.log("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤..")
    const { hasPermission } = await checkAuth(["PROFESSOR", "ADMIN", "SUPERADMIN"]);
    if (!hasPermission) return NextResponse.json({ message: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ü•π" }, { status: 403 })

    try {
        const enrollStatus = request.nextUrl.searchParams.get("enrollStatus") as EnrollStatus || false
        const studentsEnroll = await getEnrolls(enrollStatus)
        return NextResponse.json({ message: "‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", data: studentsEnroll })
    } catch (error) {
        console.log(error);
        let message = "‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"
        if (error instanceof Object && !(error instanceof Error)) message = JSON.stringify(error);
        if (error instanceof Error) message = error.message
        if (typeof error == "string") message = error
        return NextResponse.json({ message }, { status: 400 })
    }
}
