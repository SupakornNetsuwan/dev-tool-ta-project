import mime from "mime"
import { join } from "path"
import { stat, mkdir, writeFile } from "fs/promises"

/**
 * @description ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà Server
 * @param file - ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
 * @param folderName - ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ /public/uploads/{‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå}/{‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå}
 * @returns `null | string`
 */

const fileUploadHandler = async (file: FormDataEntryValue | null, folderName: string, tracker: string | null = "", accept?: string[]) => {
    tracker += tracker ? " :" : ""

    if (!file) {
        console.log(`${tracker} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö‡∏°‡∏≤ ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏°.... üü°`);
        return null
    }

    if (typeof file == "string") {
        console.log(`${tracker} ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏û‡∏ß‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£!? üî¥`);
        throw new Error("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏û‡∏ß‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£")
    }

    console.log(`${tracker} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå ü™Ñ : ${file.type}`);

    if (accept) {
        if (!accept.includes(file.type.toLowerCase())) {
            console.log(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
            throw new Error(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ ${accept.join(" / ")}`)
        }
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πá‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏ß‡∏Å ‡∏£‡∏π‡∏õ ‡πÅ‡∏•‡∏∞ PDF
        if (!["image/jpeg", "image/jpg", "image/png", "application/pdf"].includes(file.type.toLowerCase())) {
            console.log(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
            throw new Error("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ png / jpg / jpeg / pdf")
        }
    }


    if (file.size >= 10000000) {
        console.log(`${tracker} ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤ 1,0000,000 Byte (10 MB) üî¥`);
        throw new Error(`‡πÑ‡∏ü‡∏•‡πå ${file.name} ‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤ 10 MB`)
    }

    const buffer = Buffer.from(await file.arrayBuffer());
    const relativeUploadDir = `/uploads/${folderName}`
    const uploadDir = join(process.cwd(), "public", relativeUploadDir); // Directory ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤

    try {
        await stat(uploadDir)
    } catch (error) {
        if (error instanceof Error) {
            if (error.message.startsWith("ENOENT: no such file or directory")) {
                console.log(`${tracker} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡πÄ‡∏ó‡∏≠‡∏£‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...`);
                await mkdir(uploadDir, { recursive: true });
            }
        } else {
            console.error("‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ç‡∏ì‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î üî¥\n", error);
            throw error
        }
    }

    try {
        const uniqueSuffix = `${Date.now()}-${Math.round(Math.random() * 1e9)}`;
        const filename = `${file.name.replace(/\.[^/.]+$/, "").replaceAll(" ", "-")}-${uniqueSuffix}.${mime.getExtension(file.type)}`;
        await writeFile(`${uploadDir}/${filename}`, buffer);

        console.log(`${tracker} ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üü¢ ‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ ${filename}`);

        return join(relativeUploadDir, filename)
    } catch (error) {
        console.error("‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå üî¥\n", error);
        throw error
    }


}

export default fileUploadHandler